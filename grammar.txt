＜程序＞    ::= ［＜常量定义＞］{＜类声明＞}＜主函数＞


＜常量定义＞   ::=   int＜标识符＞＝＜整数＞{,＜标识符＞＝＜整数＞};
                            | char＜标识符＞＝＜字符＞{,＜标识符＞＝＜字符＞};
<类声明>    ::= class <标识符> [extends <标识符>] ‘{’ ［＜常量定义＞］<构造函数定义>{<构造函数定义>|<有返回值函数定义>|<无返回值函数定义>} ‘}’
＜主函数＞    ::= void main‘{’＜复合语句＞‘}’

<类定义> ::= <标识符> = new <标识符>‘(’ <参数> ‘)’{;<标识符> = new <标识符>‘(’ <参数> ‘)'};
<构造函数定义>  ::= <标识符>‘(’＜参数＞‘)’ ‘{’＜复合语句＞‘}’
＜有返回值函数定义＞  ::=  （int|char）<标识符>‘(’＜参数＞‘)’ ‘{’＜复合语句＞‘}’
＜无返回值函数定义＞  ::= void＜标识符＞‘(’＜参数＞‘)’‘{’＜复合语句＞‘}’
＜参数＞    ::= ＜参数表＞
＜参数表＞    ::=  ＜类型标识符＞＜标识符＞{,＜类型标识符＞＜标识符＞}| ＜空＞
＜复合语句＞   ::=  ［＜常量定义＞| <类定义>］＜语句列＞
＜语句列＞   ::=｛＜语句＞｝
＜语句＞    ::= ＜条件语句＞｜‘{’＜语句列＞‘}’｜＜赋值语句＞;｜＜有返回值函数调用语句＞；|＜无返回值函数调用语句＞；|＜写语句＞;｜<空＞;｜＜返回语句＞;
＜条件语句＞  ::=  if ‘(’＜条件＞‘)’＜语句＞［else＜语句＞］
＜条件＞    ::=  ＜表达式＞＜关系运算符＞＜表达式＞｜＜表达式＞
＜赋值语句＞   ::=  ＜标识符＞| this.标识符＝＜表达式＞
＜写语句＞    ::=  print‘(’＜表达式＞‘)’
＜返回语句＞   ::=  return[‘(’＜表达式＞‘)’]
＜表达式＞    ::= ［＋｜－］＜项＞{＜加法运算符＞＜项＞}
＜项＞     ::= ＜因子＞{＜乘法运算符＞＜因子＞}
＜因子＞    ::= ＜标识符＞｜＜整数＞|＜字符＞｜＜有返回值函数调用语句＞|‘(’＜表达式＞‘)’|<标识符>.<标识符>|this.<标识符>
＜有返回值函数调用语句＞ ::= <标识符>.＜标识符＞‘(’＜值参数表＞‘)’
＜无返回值函数调用语句＞ ::= <标识符>.＜标识符＞‘(’＜值参数表＞‘)’
＜值参数表＞   ::= ＜表达式＞{,＜表达式＞}｜＜空＞

＜加法运算符＞ ::= +
＜乘法运算符＞  ::= *
＜关系运算符＞  ::=  <｜<=｜>｜>=｜!=｜==
＜字母＞   ::= ＿｜a｜．．．｜z｜A｜．．．｜Z
＜数字＞   ::= ０｜＜非零数字＞
＜标识符＞    ::=  ＜字母＞｛＜字母＞｜＜数字＞｝
＜非零数字＞  ::= １｜．．．｜９
＜字符＞    ::=  '＜加法运算符＞'｜'＜乘法运算符＞'｜'＜字母＞'｜'＜数字＞'
＜无符号整数＞  ::= ＜非零数字＞｛＜数字＞｝
＜整数＞  ::= ［＋｜－］＜无符号整数＞｜０
